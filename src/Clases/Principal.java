package Clases;

import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Hamburguesas
 */
public class Principal extends javax.swing.JFrame {

    GestionArchivo manager_file = new GestionArchivo(); //última versión funcional       
    static String proc;

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        jButton_agregar.setEnabled(false);
        jButton_eliminar.setEnabled(false);
        jButton_modifica.setEnabled(false);
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        txtReglas.setEditable(false);

        setLocationRelativeTo(null);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        txtReglas = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtProceso = new javax.swing.JTextArea();
        msjFinal = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jButton_agregar = new javax.swing.JButton();
        jButton_modifica = new javax.swing.JButton();
        jButton_eliminar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        ARCHIVO = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtReglas.setColumns(20);
        txtReglas.setRows(5);
        jScrollPane2.setViewportView(txtReglas);

        jButton3.setText("Con Meta");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtProceso.setColumns(20);
        txtProceso.setRows(5);
        jScrollPane3.setViewportView(txtProceso);

        msjFinal.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        msjFinal.setForeground(new java.awt.Color(255, 0, 0));

        jButton2.setText("Sin Meta");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Con Meta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel9.setText("Endadenamiendo Hacia Delante");

        jLabel10.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel10.setText("Endadenamiendo Hacia Atras ");

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel7.setText("Reglas");

        jButton_agregar.setText("Nueva");
        jButton_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_agregarActionPerformed(evt);
            }
        });

        jButton_modifica.setText("Modificar");
        jButton_modifica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_modificaActionPerformed(evt);
            }
        });

        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_agregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_modifica, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_eliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_agregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_modifica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_eliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ARCHIVO.setText("ARCHIVO");

        jMenuItem1.setText("CARGAR");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        ARCHIVO.add(jMenuItem1);

        jMenuBar1.add(ARCHIVO);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel10)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(msjFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(msjFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_agregarActionPerformed
        ArrayList<BaseConocimientos> tmp_reglas = pedirRegla();

        if (tmp_reglas != null) {
            //escribir nueva regla en el archivo .txt 
            GestionArchivo ga = new GestionArchivo();
            //true para no eliminar los datos ya existentes en el archivo
            ga.escrbirReglas(tmp_reglas, true);
            try {
                //escribir nueva regla en archivo maestro
                ga.escribir();
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Regla añadida correctamente");
        }
        manager_file.leerMaestro();
        txtReglas.setText(manager_file.msj);
    }//GEN-LAST:event_jButton_agregarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            //para modificar el archivo maestro con las nuevas reglas
            if (!manager_file.escribir()) {
                JOptionPane.showMessageDialog(null, "ERROR, LA SINTAXIS DEL ARCHIVO ES INCORRECTA");
            } else {
                manager_file.leerMaestro();
                txtReglas.setText(manager_file.msj);
                jButton_agregar.setEnabled(true);
                jButton_eliminar.setEnabled(true);
                jButton_modifica.setEnabled(true);
                jButton1.setEnabled(true);
                jButton2.setEnabled(true);
                jButton3.setEnabled(true);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton_modificaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_modificaActionPerformed
        ArrayList<BaseConocimientos> tmp_reglas, tmp_regla;
        GestionArchivo ga = new GestionArchivo();
        boolean flag = true;

        while (flag) {
            try {
                String opt = JOptionPane.showInputDialog("N°Regla A Modificar");

                if (opt != null) {
                    int num_opt = Integer.parseInt(opt);
                    tmp_regla = pedirRegla(); //obtener la lista con la regla modificada
                    if (tmp_regla != null) {
                        tmp_reglas = ga.leerReglas(); //obtener todas las reglas
                        tmp_reglas.set(num_opt, tmp_regla.get(0)); //modifica el número de registro indicado
                        ga.escrbirReglas(tmp_reglas, false); //modificar archivo reglas.txt
                        ga.escribir(); //modificar archivo maestro
                        JOptionPane.showMessageDialog(null, "Regla modificada correctamente");
                    }
                }
                flag = false;

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "ERROR, valor no válido");
            }
        }

        manager_file.leerMaestro();
        txtReglas.setText(manager_file.msj);
    }//GEN-LAST:event_jButton_modificaActionPerformed

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed
        ArrayList<BaseConocimientos> tmp_reglas;
        GestionArchivo ga = new GestionArchivo();
        boolean flag = true;

        while (flag) {
            try {
                String opt = JOptionPane.showInputDialog("N°Regla A Eliminar");

                if (opt != null) {
                    int num_opt = Integer.parseInt(opt);
                    tmp_reglas = ga.leerReglas(); //no verificamos que sea null porque anteriormente ya se checó la sintaxis                
                    tmp_reglas.remove(num_opt); //elimina regla                
                    ga.escrbirReglas(tmp_reglas, false); //modificar archivo reglas.txt
                    ga.escribir(); //modificar archivo maestro
                    JOptionPane.showMessageDialog(null, "Regla Eliminada correctamente");
                }
                flag = false;

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "ERROR, valor no válido");
            }
        }
        manager_file.leerMaestro();
        txtReglas.setText(manager_file.msj);
    }//GEN-LAST:event_jButton_eliminarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String proced, resultado;
        BaseHechos tmpBH = pedirDatos(1);

        if (tmpBH != null) {
            MotorInferencias mi_p = new MotorInferencias(manager_file.leerMaestro(), tmpBH);
            resultado = mi_p.encadenamientoAdelante();
            if (resultado != null) {
                msjFinal.setText(resultado);
                proced = proc + mi_p.procedimiento;
                this.txtProceso.setText(proced);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Procedimiento anulado");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String proced, resultado;
        BaseHechos tmpBH = pedirDatos(2);
        if (tmpBH != null) {
            MotorInferencias mi_p = new MotorInferencias(manager_file.leerMaestro(), tmpBH);
            resultado = mi_p.encadenamientoAdelante();
            if (resultado != null) {
                msjFinal.setText(resultado);
                proced = proc + mi_p.procedimiento;
                this.txtProceso.setText(proced);
            } else {
                JOptionPane.showMessageDialog(null, "Procedimiento anulado");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String proced;
        MotorInferencias mi_p1 = new MotorInferencias(manager_file.leerMaestro(), pedirDatos(3));
        //JOptionPane.showMessageDialog(null, mi_p1.encadenamientoAtras());
        msjFinal.setText(mi_p1.encadenamientoAtras());
        proced = proc + mi_p1.procedimiento;
        this.txtProceso.setText(proced);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    public static ArrayList<BaseConocimientos> pedirRegla() {
        boolean flag = true;
        ArrayList<String> tmp_antecedentes = new ArrayList<>();
        String consecuente = "", antecedente = "";
        ArrayList<BaseConocimientos> tmp_reglas;

        while (flag) {
            try {
                antecedente = JOptionPane.showInputDialog("Ingrese Antecedente de la Regla\nIngrese 0 para terminar");
                if (antecedente == null) { //presionó Cancelar o la x para salir
                    return null;
                }

                int opt_antecedentes = Integer.parseInt(antecedente);

                if (!tmp_antecedentes.isEmpty()) {
                    consecuente = JOptionPane.showInputDialog("Ingrese Consecuente de la Regla");
                    if (consecuente == null) {
                        return null;
                    }
                    flag = false;
                } else {
                    JOptionPane.showMessageDialog(null, "!No ha ingresado antecedentes!");
                }
            } catch (Exception e) {
                tmp_antecedentes.add(antecedente);
            }
        }

        tmp_reglas = new ArrayList<>();
        BaseConocimientos bc = new BaseConocimientos();
        bc.setAntecedentes(tmp_antecedentes);
        bc.setConsecuente(consecuente);
        tmp_reglas.add(bc);
        return tmp_reglas;
    }

    public static BaseHechos pedirDatos(int type) {

        boolean flag = true;
        String meta;
        ArrayList<String> hechos_iniciales = new ArrayList<>(0);
        String dato = null;

        JOptionPane.showMessageDialog(null, "Se solicitarán los Hechos Iniciales");
        while (flag) {
            dato = JOptionPane.showInputDialog("Ingresa un hecho o escribe 0 para iniciar el proceso");

            try {
                if (dato == null) {
                    flag = false;
                } else {
                    int opcion = Integer.parseInt(dato);
                    if (opcion == 0) {
                        flag = false;
                    } else {
                        JOptionPane.showMessageDialog(null, "Valor no admitido");
                    }
                }

            } catch (Exception e) {
                if (!dato.equals("")) {
                    hechos_iniciales.add(dato.toLowerCase());
                }
            }
        }

        if (dato != null) {
            meta = "Sin meta"; //para mostrarlo en consola
            if (type == 1) { //con meta
                meta = JOptionPane.showInputDialog("Ingresa el hecho meta");
                if (meta == null) {
                    return null;
                }
                System.out.println("Encadenamiento Hacia Delante:");
                proc = "--------Encadenamiento Hacia Delante:--------\n\n";
            }

            if (type == 3) {
                System.out.println("Encadenamiento Hacia Atras:");
                proc = "--------Encadenamiento Hacia Atras:--------\n\n";
                meta = JOptionPane.showInputDialog("Ingresa el hecho meta").toLowerCase();
            }
            if (type == 2) { //sin meta
                System.out.println("Encadenamiento Hacia Delante:");
                proc = "--------Encadenamiento Hacia Delante:--------\n\n";
                meta = null;
            }
            JOptionPane.showMessageDialog(null, "Iniciando Proceso");
            System.out.println("\nBase de hechos: " + hechos_iniciales);
            System.out.println("Hecho meta: " + meta + "\n");

            proc += "Base de hechos: " + hechos_iniciales;
            proc += "\nHecho meta: " + meta + "\n";

            return new BaseHechos(hechos_iniciales, meta);
        }

        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu ARCHIVO;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton_agregar;
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JButton jButton_modifica;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel msjFinal;
    private javax.swing.JTextArea txtProceso;
    private javax.swing.JTextArea txtReglas;
    // End of variables declaration//GEN-END:variables
}
